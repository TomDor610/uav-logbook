# Generated by Django 5.2 on 2025-04-12 15:47

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('audit_id', models.AutoField(primary_key=True, serialize=False)),
                ('table_name', models.TextField(blank=True, null=True)),
                ('operation', models.TextField(blank=True, null=True)),
                ('changed_at', models.DateTimeField(blank=True, null=True)),
                ('record_id', models.IntegerField(blank=True, null=True)),
                ('changed_by', models.TextField(blank=True, null=True)),
                ('old_data', models.JSONField(blank=True, null=True)),
                ('new_data', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'audit_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigAudit',
            fields=[
                ('audit_id', models.AutoField(primary_key=True, serialize=False)),
                ('tail_number', models.CharField(blank=True, max_length=50, null=True)),
                ('config_date', models.DateField(blank=True, null=True)),
                ('technician_name', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
                ('change_time', models.DateTimeField(blank=True, null=True)),
                ('operation', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'config_audit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ConfigControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payload_type', models.TextField(blank=True, null=True)),
                ('battery_type', models.TextField(blank=True, null=True)),
                ('config_date', models.DateField(blank=True, null=True)),
                ('technician_name', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'config_control',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Lru',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lru_item', models.CharField(blank=True, max_length=50, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('assembly_date', models.DateField(blank=True, null=True)),
                ('assembler_name', models.CharField(blank=True, max_length=100, null=True)),
                ('item_hours', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
            ],
            options={
                'db_table': 'lru',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Malfunction',
            fields=[
                ('malfunction_id', models.AutoField(primary_key=True, serialize=False)),
                ('malfunction_open_date', models.DateField()),
                ('technician_name', models.CharField(max_length=100)),
                ('malfunction_description', models.TextField()),
                ('action_repair_description', models.TextField(blank=True, null=True)),
                ('malfunction_closed_date', models.DateField(blank=True, null=True)),
                ('technician_signature', models.TextField(blank=True, null=True)),
                ('supervisor_signature', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'malfunction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permit_description', models.TextField()),
                ('validity', models.TextField(blank=True, null=True)),
                ('technician_signature', models.TextField(blank=True, null=True)),
                ('closing_date', models.DateField()),
            ],
            options={
                'db_table': 'permit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sort',
            fields=[
                ('flight_number', models.IntegerField(blank=True, null=True)),
                ('sort_purpose', models.TextField(blank=True, null=True)),
                ('battery_id', models.CharField(blank=True, max_length=50, null=True)),
                ('battery_takeoff_voltage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('payload1_type', models.CharField(blank=True, max_length=100, null=True)),
                ('payload1_id', models.CharField(blank=True, max_length=100, null=True)),
                ('payload2_type', models.CharField(blank=True, max_length=100, null=True)),
                ('payload2_id', models.CharField(blank=True, max_length=100, null=True)),
                ('pcu_id', models.CharField(blank=True, max_length=100, null=True)),
                ('pgcs_type', models.CharField(blank=True, max_length=100, null=True)),
                ('flight_configuration_addons', models.TextField(blank=True, null=True)),
                ('launcher_type', models.CharField(blank=True, max_length=100, null=True)),
                ('launcher_id', models.CharField(blank=True, max_length=100, null=True)),
                ('internal_pilot_name', models.CharField(blank=True, max_length=100, null=True)),
                ('technician_name', models.CharField(blank=True, max_length=100, null=True)),
                ('takeoff_time', models.TimeField(blank=True, null=True)),
                ('landing_time', models.TimeField(blank=True, null=True)),
                ('sort_total_time', models.DurationField(blank=True, null=True)),
                ('landing_battery_voltage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('landing_accuracy', models.CharField(blank=True, max_length=50, null=True)),
                ('malfunction', models.BooleanField(blank=True, null=True)),
                ('manager_name', models.TextField(blank=True, null=True)),
                ('permits_check', models.BooleanField(blank=True, null=True)),
                ('pre_mission_check', models.BooleanField(blank=True, null=True)),
                ('pre_mission_check_time', models.TimeField(blank=True, null=True)),
                ('pre_mission_check_name', models.TextField(blank=True, null=True)),
                ('site', models.TextField(blank=True, null=True)),
                ('flight_date', models.DateField(blank=True, null=True)),
                ('after_flight_check_time', models.TimeField(blank=True, null=True)),
                ('after_flight_check_name', models.TextField(blank=True, null=True)),
                ('after_flight_check_date', models.DateField(blank=True, null=True)),
                ('after_flight_check_passed', models.BooleanField(blank=True, null=True)),
                ('uav_hours_current', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('uav_hours_today', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('uav_hours_total', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sorties_current', models.IntegerField(blank=True, null=True)),
                ('sorties_today', models.IntegerField(blank=True, null=True)),
                ('sorties_total', models.IntegerField(blank=True, null=True)),
                ('sort_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'sort',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Uav',
            fields=[
                ('tail_number', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('model', models.TextField(blank=True, null=True)),
                ('manufacturing_date', models.DateField(blank=True, null=True)),
                ('frequency', models.IntegerField(blank=True, null=True)),
                ('uav_hours', models.IntegerField(blank=True, null=True)),
                ('rata', models.DateField(blank=True, null=True)),
                ('lru_items', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'uav',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UavBalanceControl',
            fields=[
                ('pk', models.CompositePrimaryKey('tail_number', 'date', blank=True, editable=False, primary_key=True, serialize=False)),
                ('empty_weight', models.FloatField(blank=True, null=True)),
                ('right_winglet', models.TextField(blank=True, null=True)),
                ('left_winglet', models.TextField(blank=True, null=True)),
                ('nose', models.TextField(blank=True, null=True)),
                ('other', models.TextField(blank=True, null=True)),
                ('technician_name', models.TextField(blank=True, null=True)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'uav_balance_control',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UavVersions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fcc_version', models.TextField(blank=True, null=True)),
                ('fcc_crc_version', models.TextField(blank=True, null=True)),
                ('fcc_prog_size_version', models.TextField(blank=True, null=True)),
                ('dvr_version', models.TextField(blank=True, null=True)),
                ('dvr_crc_version', models.TextField(blank=True, null=True)),
                ('dvr_prog_size_version', models.TextField(blank=True, null=True)),
                ('last_updated', models.DateField(blank=True, null=True)),
                ('technician_name', models.TextField(blank=True, null=True)),
                ('supervisor_name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'uav_versions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UavWeightsControl',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuselage_weight', models.IntegerField(blank=True, null=True)),
                ('right_wing_weight', models.IntegerField(blank=True, null=True)),
                ('left_wing_weight', models.IntegerField(blank=True, null=True)),
                ('right_winglet_weight', models.IntegerField(blank=True, null=True)),
                ('left_winglet_weight', models.IntegerField(blank=True, null=True)),
                ('technician_name', models.TextField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'uav_weights_control',
                'managed': False,
            },
        ),
    ]
